{"version":3,"sources":["imgs/main-vector.png","imgs/vector.svg","components/Start.js","context/types.js","context/AppReducer.js","context/AppState.js","imgs/logo.svg","components/Navbar.js","imgs/people.png","imgs/next.svg","imgs/next-uncompleted.svg","imgs/next-uncompleted-clicked.svg","pages/UserPage.js","imgs/vaccinate2.png","imgs/previous.svg","pages/CovidPage.js","imgs/doctor2.png","pages/VaccinationPage.js","imgs/bike.png","pages/RecommendationPage.js","components/Form.js","components/Wrapper.js","imgs/star.svg","components/ThankYou.js","components/ComponentToDisplay.js","App.js","index.js"],"names":["startContentVariant","initial","opacity","animate","Start","setComponentToDisplay","motion","div","className","backgroundImage","main_vector","transition","delay","img","src","vector","alt","scale","duration","y","href","onClick","INCREASE_PAGE","DECREASE_PAGE","SET_ANTIBODY_TEST","SET_ANTIBODY_NUMBER","SET_ANTIBODY_DATE","SET_HADCOVID_DATE","SET_VACCINATIONDOSE","SET_WAITING_FOR","SET_VALUE","AppReducer","state","action","type","currentPage","doneAntibodyTest","payload","antibodyNumber","antibodyDate","hadCovidDate","vaccinationDose","waitingFor","name","value","AppContext","createContext","initialState","firstName","lastName","email","hadCovid","isVaccinated","onlineMeetings","officeWorkDays","physicalMeetings","opinionAboutEnv","AppState","props","useReducer","dispatch","Provider","nextPage","previousPage","setDoneAntibodyTest","input","setAntibodyDate","setAntibodyNumber","setHadCovidDate","setVaccinationDose","setWaitingFor","onlineMeetingsDays","setValue","children","Navbar","logo","UserInfo","useContext","useState","firstNameErr","setFirstNameErr","lastNameErr","setLastNameErr","emailErr","setEmailErr","isValid","isNotEmpty","id","htmlFor","onChange","ev","target","error","length","test","autoComplete","emailRegex","user_info_img","next_svg","next_uncompleted_svg","CovidInfo","handleHadCovid","handleDoneAntibodyTest","doneABTest","antibodyNumberErr","setAntibodyNumberErr","noOrCurrentlyHave","uncompletedError","setUncompletedError","canSubmit","isFilled1","isFilled2","showSubmit","setShowSubmit","useEffect","checked","placeholder","abNumber","handleAntibodyNumber","covid19","previous_svg","setTimeout","next_uncompleted","VaccinationInfo","handleIsVaccinated","handleVaccinationDose","handleWaitingFor","setCanSubmit","doctor","WorkInfo","handleChange","showThankYouPage","setShowThankYouPage","style","marginTop","onSubmit","preventDefault","bike","Form","UserPage","CovidPage","VaccinationPage","RecommendationPage","Wrapper","shapeClass","setShapeClass","ThankYou","x","star","h1","ComponentToDisplay","componentDoDisplay","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAAe,MAA0B,wCCA1B,MAA0B,mC,eCOnCA,EAAsB,CACxBC,QAAS,CACLC,QAAS,GAEbC,QAAS,CACLD,QAAS,IAgDFE,EA5CD,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,sBAMZ,OACI,cAACC,EAAA,EAAOC,IAAR,CAAYC,UAAU,aACtBP,QAAS,CAACQ,gBAAgB,OAAD,OAASC,EAAT,MACzBP,QAAS,CAACM,gBAAiB,QAC3BE,WAAY,CAACC,MAAO,IAHpB,SAMI,eAACN,EAAA,EAAOC,IAAR,CAAYC,UAAU,qBAClBP,QAASD,EAAoBC,QAC7BE,QAASH,EAAoBG,QAC7BQ,WAAY,CAACC,MAAO,IAHxB,UAKI,qBAAKJ,UAAU,iBAAf,SACI,cAACF,EAAA,EAAOO,IAAR,CAAYC,IAAKC,EAAQC,IAAI,GAC7Bf,QAAS,CAACgB,MAAO,IACjBd,QAAS,CAACc,MAAO,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,IAC9BN,WAAY,CAACC,MAAO,GAAIM,SAAU,QAItC,cAACZ,EAAA,EAAOC,IAAR,CAAYC,UAAU,eACtBP,QAAS,CAACkB,GAAG,IAAKjB,QAAS,GAC3BC,QAAS,CAACgB,EAAE,EAAGjB,QAAS,GACxBS,WAAY,CAACO,SAAU,IAAIN,MAAO,IAHlC,SAKI,oBAAGQ,KAAK,IAAIC,QA5BJ,WACpBhB,EAAsB,YA2BV,mEAEI,uBAFJ,wD,cC/CPiB,EAAgB,gBAChBC,EAAgB,gBAGhBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAoB,oBAGpBC,EAAsB,sBACtBC,EAAkB,kBAGlBC,EAAY,YCoEVC,EAzDI,SAACC,EAAOC,GACvB,OAAQA,EAAOC,MACX,KAAKZ,EACD,OAAO,2BACAU,GADP,IAEIG,YAAaH,EAAMG,YAAc,IAEzC,KAAKZ,EACD,OAAO,2BACAS,GADP,IAEIG,YAAaH,EAAMG,YAAc,IAGzC,KAAKX,EACD,OAAO,2BACAQ,GADP,IAEII,iBAAkBH,EAAOI,UAEjC,KAAKZ,EACD,OAAO,2BACAO,GADP,IAEIM,eAAgBL,EAAOI,UAE/B,KAAKX,EACD,OAAO,2BACAM,GADP,IAEIO,aAAcN,EAAOI,UAE7B,KAAKV,EACD,OAAO,2BACAK,GADP,IAEIQ,aAAcP,EAAOI,UAG7B,KAAKT,EACD,OAAO,2BACAI,GADP,IAEIS,gBAAiBR,EAAOI,UAEhC,KAAKR,EACD,OAAO,2BACAG,GADP,IAEIU,WAAYT,EAAOI,UAI3B,KAAKP,EACD,OAAO,2BACAE,GADP,kBAEKC,EAAOI,QAAQM,KAAOV,EAAOI,QAAQO,QAI9C,QACI,OAAOZ,ICzDNa,EAAaC,0BAGbC,EAAe,CACxBZ,YAAa,EAGba,UAAW,GACXC,SAAU,GACVC,MAAO,GAGPC,SAAU,GACVf,iBAAkB,GAClBE,eAAgB,GAChBC,aAAc,GACdC,aAAc,GAGdY,aAAc,GACdX,gBAAiB,GACjBC,WAAY,GAGZW,eAAgB,GAChBC,eAAgB,GAChBC,iBAAkB,GAClBC,gBAAiB,IAIRC,EAAW,SAACC,GACrB,MAA0BC,qBAAW5B,EAAYgB,GAAjD,mBAAOf,EAAP,KAAc4B,EAAd,KA4DA,OAAO,cAACf,EAAWgB,SAAZ,CAAqBjB,MAAO,CAC/BT,YAAaH,EAAMG,YACnB2B,SA5Da,WACbF,EAAS,CACL1B,KAAMZ,KA2DVyC,aAxDiB,WACjBH,EAAS,CACL1B,KAAMX,KAyDVyB,UAAWhB,EAAMgB,UACjBC,SAAUjB,EAAMiB,SAChBC,MAAOlB,EAAMkB,MAGbC,SAAUnB,EAAMmB,SAChBf,iBAAkBJ,EAAMI,iBACxBE,eAAgBN,EAAMM,eACtBC,aAAcP,EAAMO,aACpBC,aAAcR,EAAMQ,aAEpBwB,oBA9DwB,SAAAC,GACxBL,EAAS,CACL1B,KAAMV,EACNa,QAAS4B,KA4DbC,gBAzDoB,SAAAD,GACpBL,EAAS,CACL1B,KAAMR,EACNW,QAAS4B,KAuDbE,kBApDsB,SAAAF,GACtBL,EAAS,CACL1B,KAAMT,EACNY,QAAS4B,KAkDbG,gBA/CoB,SAAAH,GACpBL,EAAS,CACL1B,KAAMP,EACNU,QAAS4B,KA+Cbb,aAAcpB,EAAMoB,aACpBX,gBAAiBT,EAAMS,gBACvBC,WAAYV,EAAMU,WAElB2B,mBA/CuB,SAAAJ,GACvBL,EAAS,CACL1B,KAAMN,EACNS,QAAS4B,KA6CbK,cA1CkB,SAAAL,GAClBL,EAAS,CACL1B,KAAML,EACNQ,QAAS4B,KA0CbM,mBAAoBvC,EAAMuC,mBAC1BjB,eAAgBtB,EAAMsB,eACtBC,iBAAkBvB,EAAMuB,iBACxBC,gBAAiBxB,EAAMwB,gBAGvBgB,SA5Ca,SAAC7B,EAAMC,GACpBgB,EAAS,CACL1B,KAAMJ,EACNO,QAAS,CAAEM,OAAOC,aAInB,SAuCFc,EAAMe,YCzJA,MAA0B,iCCoB1BC,EAXA,SAAC,GAAmB,IAAlBvC,EAAiB,EAAjBA,YACb,OACI,sBAAK3B,UAAU,SAAf,UACI,oBAAIA,UAAU,cAAd,SACI,qBAAKM,IAAK6D,EAAM3D,IAAI,WAExB,qBAAIR,UAAU,eAAd,UAA8B2B,EAA9B,YCfG,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,6CCA1B,MAA0B,qDCuM1ByC,EA3LE,WAGb,MAQQC,qBAAWhC,GAPfG,EADJ,EACIA,UACAC,EAFJ,EAEIA,SACAC,EAHJ,EAGIA,MAEAsB,EALJ,EAKIA,SAEAV,EAPJ,EAOIA,SAIJ,EAAwCgB,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KA4EMC,GAAWN,IAAiBE,IAAgBE,EAC5CG,EAA2B,KAAdtC,GAAiC,KAAbC,GAA6B,KAAVC,EAqB1D,OACI,sBAAK1C,UAAU,YAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,0BAASA,UAAU,eAAnB,UACI,uBAAM+E,GAAG,YAAT,UACI,sBAAK/E,UAAU,cAAf,UACI,oBAAIgF,QAAQ,OAAOhF,UAAU,WAA7B,kDACA,uBACA0B,KAAK,OACLS,KAAK,YACL4C,GAAG,aACH/E,UAAU,aACViF,SAzGM,SAAAC,GAE1B,MAAsBA,EAAGC,OAAlBhD,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAEb4B,EAAS7B,EAAMC,GAEf,IAEIgD,EAIAA,EAHChD,EAEMA,EAAMiD,OAAS,GAAKjD,EAAMiD,OAAS,EAClC,sQACDjD,EAAMiD,OAAS,IACd,oRARE,iCASIC,KAAKlD,GAGX,KAFA,wUANA,+IAWZoC,EAAgBY,IAqFIhD,MAAOI,EACP+C,aAAa,WAEhBhB,GACG,mBAAGvE,UAAU,cAAb,SAA4BuE,IAEhC,sBAAKvE,UAAU,cAAf,UACI,oBAAIgF,QAAQ,YAAYhF,UAAU,WAAlC,4CACA,uBACA0B,KAAK,OACLS,KAAK,WACL4C,GAAG,YACH/E,UAAU,aACViF,SA/FK,SAAAC,GACzB,MAAyBA,EAAGC,OAApBhD,EAAR,EAAQA,KAAOC,EAAf,EAAeA,MAEf4B,EAAS7B,EAAMC,GAEf,IAEIgD,EAIAA,EAHChD,EAEMA,EAAMiD,OAAS,GAAKjD,EAAMiD,OAAS,EAClC,gQACDjD,EAAMiD,OAAS,IACd,8QARE,kCASIC,KAAKlD,GAGX,KAFA,kUANA,yIAWZsC,EAAeU,IA4EKhD,MAAOK,EACP8C,aAAa,WAEhBd,GACG,mBAAGzE,UAAU,cAAb,SAA4ByE,IAEhC,sBAAKzE,UAAU,cAAf,UACI,oBAAIgF,QAAQ,QAAQhF,UAAU,WAA9B,4CACA,uBACA0B,KAAK,OACLS,KAAK,QACL4C,GAAG,QACH/E,UAAU,aACViF,SArFE,SAAAC,GAEtB,MAAyBA,EAAGC,OAApBhD,EAAR,EAAQA,KAAOC,EAAf,EAAeA,MAEf4B,EAAS7B,EAAMC,GAEf,IAGIgD,EAHEI,EAAa,2DAKdpD,EAEOoD,EAAWF,KAAKlD,GAEjBoD,EAAWF,KAAKlD,KARL,gDAQ8BkD,KAAKlD,KACrDgD,EAAQ,0OAFRA,EAAQ,6MAFRA,EAAQ,yIAOZR,EAAYQ,IAmEQhD,MAAOM,EACP6C,aAAa,WAEhBZ,GACG,mBAAG3E,UAAU,cAAb,SAA4B2E,OAGpC,uBAAM3E,UAAU,uBAAhB,UACA,uBADA,6OAKJ,uBAAOA,UAAU,cAAjB,SACI,qBAAKM,IAAKmF,EAAejF,IAAI,uBAGrC,qBAAKR,UAAU,SAAf,SACC6E,GAAWC,EACP,wBAAQjE,QA/DA,WACjByC,KA8DS,SACG,qBAAKhD,IAAKoF,EAAUlF,IAAI,WAE3B,wBAAQK,QAhFC,WACbiE,IACItC,GACDgC,EAAgB,gJAEf/B,GACDiC,EAAe,0IAEdhC,GACDkC,EAAY,4IAuEX,SACG,qBAAKtE,IAAKqF,EAAsBnF,IAAI,6BC7LzC,MAA0B,uCCA1B,MAA0B,qCCkS1BoF,EAtRG,WAEd,MAgBIvB,qBAAWhC,GAfXiB,EADJ,EACIA,SACAC,EAFJ,EAEIA,aAEAZ,EAJJ,EAIIA,SACAf,EALJ,EAKIA,iBACAE,EANJ,EAMIA,eACAC,EAPJ,EAOIA,aACAC,EARJ,EAQIA,aAEAwB,EAVJ,EAUIA,oBACAE,EAXJ,EAWIA,gBACAC,EAZJ,EAYIA,kBACAC,EAbJ,EAaIA,gBAEAI,EAfJ,EAeIA,SAME6B,EAAiB,SAAAX,GACnB,MAAwBA,EAAGC,OAAnBhD,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEA,uBAAVA,GAA6B,4DAAVA,IACnBoB,EAAoB,IACpBE,EAAgB,IAChBC,EAAkB,KAEtBK,EAAS7B,EAAMC,IAGb0D,EAAyB,SAAAC,GAC3BvC,EAAoBuC,GAED,iBAAfA,EACAnC,EAAgB,IAEI,uBAAfmC,IACLrC,EAAgB,IAChBC,EAAkB,MAwB1B,EAAkDW,mBAAS,IAA3D,mBAAO0B,EAAP,KAA0BC,EAA1B,KAGMC,EAAiC,uBAAbvD,GAAmC,4DAAbA,EA2BhD,EAAgD2B,oBAAS,GAAzD,mBAAO6B,EAAP,KAAyBC,EAAzB,KASMC,EAlCY,WAEd,GAAiB,KAAb1D,EAAiB,OAAO,EAEvB,GAAiB,iBAAbA,EAAmB,CACxB,GAAyB,KAArBf,EAAyB,OAAO,EAE/B,GAAyB,iBAArBA,EACL,QAAqB,KAAjBG,GAA0C,KAAnBD,IAA0B,WAAWwD,KAAKxD,KA0B/DwE,IArBA,WACd,GAAiB,KAAb3D,EAAiB,OAAO,EACvB,GAAiB,iBAAbA,EAAmB,CACxB,GAAyB,KAArBf,EAAyB,OAAO,EAE/B,GAAyB,uBAArBA,EACL,QAAKI,GAegBuE,IAAeL,EAGhD,EAAoC5B,oBAAS,GAA7C,mBAAOkC,EAAP,KAAmBC,EAAnB,KAmBA,OAhBAC,qBAAU,WAGFD,IADAJ,KAKN,CACE1D,EACAf,EACAE,EACAC,EACAC,EACAqE,IAIA,sBAAKrG,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,yBAASA,UAAU,eAAnB,SACI,uBAAM+E,GAAG,aAAT,UACI,sBAAK/E,UAAU,cAAf,UACI,oBAAIA,UAAU,sBAAd,mHACA,wBAAOA,UAAU,yBAAyBgF,QAAQ,aAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,WACL4C,GAAG,aACHE,SAAUY,EACVzD,MAAM,eACNuE,QAAsB,iBAAbhE,IAET,qBAAK3C,UAAU,cATpB,kBAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,oBAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,WACL4C,GAAG,oBACHE,SAAUY,EACVzD,MAAM,qBACNuE,QAAsB,uBAAbhE,IAET,qBAAK3C,UAAU,cATpB,wBAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,uBAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,WACL4C,GAAG,uBACH3C,MAAM,0DACN6C,SAAUY,EACVc,QAAsB,4DAAbhE,IAET,qBAAK3C,UAAU,cATpB,gEAcM,iBAAb2C,GACG,sBAAK3C,UAAU,cAAf,UACI,oBAAIA,UAAU,sBAAd,qTACA,wBAAOA,UAAU,yBAAyBgF,QAAQ,qBAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,qBACL4C,GAAG,qBACH3C,MAAM,eACN6C,SAAU,SAAAC,GAAE,OAAIY,EAAuBZ,EAAGC,OAAO/C,QACjDuE,QAA8B,iBAArB/E,IAET,qBAAK5B,UAAU,cATpB,kBAYA,wBAAOA,UAAU,+BAA+BgF,QAAQ,sBAAxD,UACI,uBACCtD,KAAK,QACLS,KAAK,qBACL4C,GAAG,sBACH3C,MAAM,qBACN6C,SAAU,SAAAC,GAAE,OAAIY,EAAuBZ,EAAGC,OAAO/C,QACjDuE,QAA8B,uBAArB/E,IAEV,qBAAK5B,UAAU,cATnB,2BAec,iBAArB4B,GACG,sBAAK5B,UAAU,cAAf,UACI,+ZACA,qBAAKA,UAAU,mBAAf,SACI,uBACCA,UAAU,aACV0B,KAAK,OACLS,KAAK,qBACL4C,GAAG,qBACHE,SAtJF,SAAAC,GAAE,OAAIxB,EAAgBwB,EAAGC,OAAO/C,QAuJ9BA,MAAOL,MAGZ,qBAAK/B,UAAU,mBAAf,SACI,uBACCA,UAAU,aACV0B,KAAK,SACLS,KAAK,uBACL4C,GAAG,uBACH6B,YAAY,wIACZxE,MAAON,EACPmD,SAAU,SAAAC,GAAE,OAjLZ,SAAA2B,GAEzB,IAAIzB,EACJzB,EAAkBkD,GAEbA,EAGK,WAAWvB,KAAKuB,KACtBzB,EAAQ,kWAHRA,EAAQ,kQAMZa,EAAqBb,GAqKoB0B,CAAqB5B,EAAGC,OAAO/C,YAGnD4D,GACG,mBAAGhG,UAAU,cAAb,SAA4BgG,OAKlB,uBAArBpE,GACG,sBAAK5B,UAAU,cAAf,UACI,iWACA,qBAAKA,UAAU,mBAAf,SACI,uBACCA,UAAU,aACV0B,KAAK,OACLS,KAAK,iBACL4C,GAAG,iBACH6B,YAAY,yCACZ3B,SAnLF,SAAAC,GAAE,OAAItB,EAAgBsB,EAAGC,OAAO/C,QAoL9BA,MAAOJ,cAOxB,uBAAOhC,UAAU,cAAjB,SACI,qBAAKM,IAAKyG,EAASvG,IAAI,kBAG/B,sBAAKR,UAAU,SAAf,UACI,wBAAQa,QAAS0C,EAAjB,SACI,qBAAKjD,IAAK0G,EAAcxG,IAAI,eAG/BgG,EAEG,wBAAQ3F,QAASyC,EAAjB,SACQ,qBAAKhD,IAAKoF,EAAUlF,IAAI,WAGpC,yBAAQK,QAvKK,WACrBuF,GAAoB,GACpBa,YAAW,WACPb,GAAoB,KACrB,MAmKK,UACSD,GACG,mBAAGnG,UAAU,kBAAb,wEAEJ,qBAAKM,IAAK4G,EAAkB1G,IAAI,0BCzRzC,MAA0B,oCC6O1B2G,EAjOS,WAEpB,MAYI9C,qBAAWhC,GAXXiB,EADJ,EACIA,SACAC,EAFJ,EAEIA,aAEAX,EAJJ,EAIIA,aACAX,EALJ,EAKIA,gBACAC,EANJ,EAMIA,WAEA2B,EARJ,EAQIA,mBACAC,EATJ,EASIA,cAEAE,EAXJ,EAWIA,SAIEoD,EAAqB,SAAAlC,GACvB,MAAwBA,EAAGC,OAAnBhD,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEA,iBAAVA,GACA0B,EAAc,IAEJ,uBAAV1B,GACAyB,EAAmB,IAGvBG,EAAS7B,EAAMC,IAEbiF,EAAwB,SAAAnC,GAAE,OAAIlB,EAASkB,EAAGC,OAAOhD,KAAM+C,EAAGC,OAAO/C,QACjEkF,EAAmB,SAAApC,GAAE,OAAIlB,EAASkB,EAAGC,OAAOhD,KAAM+C,EAAGC,OAAO/C,QAelE,EAAkCkC,oBAAS,GAA3C,mBAAO+B,EAAP,KAAkBkB,EAAlB,KAEA,EAAgDjD,oBAAS,GAAzD,mBAAO6B,EAAP,KAAyBC,EAAzB,KAkBA,OATAM,qBAAU,WACUa,IAtBK,KAAjB3E,KACsB,iBAAjBA,EACmB,KAApBX,EAGkB,uBAAjBW,EACc,KAAfV,OADH,OAmBP,CACEU,EACAX,EACAC,IAIA,sBAAKlC,UAAU,mBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,yBAASA,UAAU,eAAnB,SACI,uBAAM+E,GAAG,mBAAT,UACI,sBAAK/E,UAAU,cAAf,UACI,oBAAIA,UAAU,WAAd,+FACA,wBAAOA,UAAU,yBAAyBgF,QAAQ,gBAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,eACL4C,GAAG,gBACH3C,MAAM,eACN6C,SAAUmC,EACVT,QAA0B,iBAAjB/D,IAEV,qBAAK5C,UAAU,cATnB,kBAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,oBAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,eACL4C,GAAG,oBACH3C,MAAM,qBACN6C,SAAUmC,EACVT,QAA0B,uBAAjB/D,IAEV,qBAAK5C,UAAU,cATnB,2BAac,iBAAjB4C,GACG,sBAAK5C,UAAU,cAAf,UACI,8JACA,wBAAOA,UAAU,yBAA0BgF,QAAQ,oBAAnD,UACI,uBACCtD,KAAK,QACLS,KAAK,kBACL4C,GAAG,oBACH3C,MAAM,kPACN6C,SAAUoC,EACVV,QAA6B,oPAApB1E,IAEV,qBAAKjC,UAAU,cATnB,qPAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,mBAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,kBACL4C,GAAG,mBACH3C,MAAM,yIACN6C,SAAUoC,EACVV,QAA6B,2IAApB1E,IAEV,qBAAKjC,UAAU,cATnB,4IAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,iBAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,kBACL4C,GAAG,iBACH3C,MAAM,8PACN6C,SAAUoC,EACVV,QAA6B,gQAApB1E,IAEV,qBAAKjC,UAAU,cATnB,iQAYqB,gQAApBiC,GACG,oBAAGjC,UAAU,YAAb,4GACwB,uBADxB,sJAE+B,mBAAGY,KAAK,8BAAR,+CAKzB,uBAAjBgC,GACG,sBAAK5C,UAAU,cAAf,UACI,gGACA,wBAAOA,UAAU,yBAAyBgF,QAAQ,qBAAlD,UACI,uBACCtD,KAAK,QACLU,MAAM,yNACN2C,GAAG,qBACH5C,KAAK,aACLwE,QAAwB,2NAAfzE,EACT+C,SAAUqC,IAEX,qBAAKtH,UAAU,cATnB,4NAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,eAAlD,UACI,uBACCtD,KAAK,QACLU,MAAM,0DACN2C,GAAG,eACH5C,KAAK,aACLwE,QAAwB,4DAAfzE,EACT+C,SAAUqC,IAEX,qBAAKtH,UAAU,cATnB,6DAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,uBAAlD,UACI,uBACCtD,KAAK,QACLU,MAAM,qLACN2C,GAAG,uBACH5C,KAAK,aACLwE,QAAwB,uLAAfzE,EACT+C,SAAUqC,IAEX,qBAAKtH,UAAU,cATnB,wLAYgB,4DAAfkC,GACG,oBAAGlC,UAAU,YAAb,0BACO,mBAAGY,KAAK,8BAAR,4CAGK,uLAAfsB,GACG,oBAAGlC,UAAU,YAAb,ibACoF,uBADpF,wHAE0B,mBAAGY,KAAK,8BAAR,oDAO9C,uBAAOZ,UAAU,cAAjB,SACI,qBAAKM,IAAKkH,EAAQhH,IAAI,gBAG9B,sBAAKR,UAAU,SAAf,UACI,wBAAQa,QAAS0C,EAAjB,SACI,qBAAKjD,IAAK0G,EAAcxG,IAAI,eAE/B6F,EAEG,wBAAQxF,QAASyC,EAAjB,SACI,qBAAKhD,IAAKoF,EAAUlF,IAAI,WAI5B,yBAAQK,QApKC,WACrBuF,GAAoB,GACpBa,YAAW,WACPb,GAAoB,KACrB,OAgKS,UACKD,GACG,mBAAGnG,UAAU,kBAAb,wEAEJ,qBAAKM,IAAK4G,EAAkB1G,IAAI,0BCrOzC,MAA0B,iCC8N1BiH,EAnNE,SAAC,GAA6B,IAA5B5H,EAA2B,EAA3BA,sBAEf,EASIwE,qBAAWhC,GARXkB,EADJ,EACIA,aAEAQ,EAHJ,EAGIA,mBACAjB,EAJJ,EAIIA,eACAC,EALJ,EAKIA,iBACAC,EANJ,EAMIA,gBAEAgB,EARJ,EAQIA,SAIE0D,EAAe,SAAAxC,GAAE,OAAIlB,EAASkB,EAAGC,OAAOhD,KAAM+C,EAAGC,OAAO/C,QAG9D,EAAgDkC,oBAAS,GAAzD,mBAAOqD,EAAP,KAAyBC,EAAzB,KAEAlB,qBAAU,WAGDkB,KAFA7D,IAAuBjB,MAG9B,CACEiB,EACAjB,IAOJ,OACI,sBAAK9C,UAAU,sBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,0BAASA,UAAU,2CAAnB,UACI,oBAAG6H,MAAO,CAACC,UAAU,QAArB,8oCAGA,uBACA,uBAJA,giBAMA,uBAAM/C,GAAG,sBAAsBgD,SAd5B,SAAC7C,GAChBA,EAAG8C,iBACCL,GAAkB9H,EAAsB,aAYhC,UACI,sBAAKG,UAAU,cAAf,UACQ,oBAAIA,UAAU,WAAd,mkBACJ,wBAAOA,UAAU,yBAAyBgF,QAAQ,QAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,qBACL4C,GAAG,QACH3C,MAAM,4EACNpC,UAAU,aACViF,SAAUyC,EACVf,QAAgC,8EAAvB5C,IAEV,qBAAK/D,UAAU,cAVnB,+EAcA,wBAAOA,UAAU,yBAAyBgF,QAAQ,OAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,qBACL4C,GAAG,OACH3C,MAAM,kFACNpC,UAAU,aACViF,SAAUyC,EACVf,QAAgC,oFAAvB5C,IAEV,qBAAK/D,UAAU,cAVnB,qFAcA,wBAAOA,UAAU,yBAAwBgF,QAAQ,oBAAjD,UACI,uBACCtD,KAAK,QACLS,KAAK,qBACL4C,GAAG,oBACH3C,MAAM,+FACNpC,UAAU,aACViF,SAAUyC,EACVf,QAAgC,iGAAvB5C,IAEV,qBAAK/D,UAAU,cAVnB,kGAaA,wBAAOA,UAAU,yBAAyBgF,QAAQ,gBAAlD,UACI,uBACCtD,KAAK,QACLS,KAAK,qBACL4C,GAAG,gBACH3C,MAAM,sEACNpC,UAAU,aACViF,SAAUyC,EACVf,QAAgC,wEAAvB5C,IAEV,qBAAK/D,UAAU,cAVnB,4EAcJ,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,WAAd,gRACA,wBAAOA,UAAU,yBAAyBgF,QAAQ,OAAlD,UACI,uBACCtD,KAAK,QACLqD,GAAG,OACH3C,MAAM,IACN6C,SAAUyC,EACVf,QAA4B,MAAnB7D,EACTX,KAAK,mBAEN,qBAAKnC,UAAU,cATnB,OAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,MAAlD,UACI,uBACCtD,KAAK,QACLqD,GAAG,MACH3C,MAAM,IACN6C,SAAUyC,EACVf,QAA4B,MAAnB7D,EACTX,KAAK,mBAEN,qBAAKnC,UAAU,cATnB,OAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,MAAlD,UACI,uBACCtD,KAAK,QACLqD,GAAG,MACH3C,MAAM,IACN6C,SAAUyC,EACVf,QAA4B,MAAnB7D,EACTX,KAAK,mBAEN,qBAAKnC,UAAU,cATnB,OAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,QAAlD,UACI,uBACCtD,KAAK,QACLqD,GAAG,QACH3C,MAAM,IACN6C,SAAUyC,EACVf,QAA4B,MAAnB7D,EACTX,KAAK,mBAEN,qBAAKnC,UAAU,cATnB,OAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,OAAlD,UACI,uBACCtD,KAAK,QACLqD,GAAG,OACH3C,MAAM,IACN6C,SAAUyC,EACVf,QAA4B,MAAnB7D,EACTX,KAAK,mBAEN,qBAAKnC,UAAU,cATnB,OAYA,wBAAOA,UAAU,yBAAyBgF,QAAQ,OAAlD,UACI,uBACCtD,KAAK,QACLqD,GAAG,OACH3C,MAAM,IACN6C,SAAUyC,EACVf,QAA4B,MAAnB7D,EACTX,KAAK,mBAEN,qBAAKnC,UAAU,cATnB,UAaJ,sBAAKA,UAAU,cAAf,UACI,kMACA,0BACA+E,GAAG,qBACH5C,KAAK,mBACLnC,UAAU,WACViF,SAAUyC,EACVtF,MAAOW,OAEX,sBAAK/C,UAAU,cAAf,UACI,sLAAgC,uBAAhC,qNACA,0BACA+E,GAAG,sBACH5C,KAAK,kBACLnC,UAAU,WACViF,SAAUyC,EACVtF,MAAOY,OAEX,qBAAKhD,UAAU,qBAAf,SACI,wBAAQ0B,KAAK,SAAS1B,UAAU,gBAAhC,4EAIZ,uBAAOA,UAAU,oCAAjB,SACI,qBAAKM,IAAK2H,EAAMzH,IAAI,UAG5B,qBAAKR,UAAU,SAAf,SACI,wBAAQa,QAAS0C,EAAjB,SACI,qBAAKjD,IAAK0G,EAAcxG,IAAI,qBC5LjC0H,EAfF,SAAC,GAA6B,IAA5BrI,EAA2B,EAA3BA,sBAEX,OADwBwE,qBAAWhC,GAA3BV,aAEJ,KAAK,EACD,OAAO,cAACwG,EAAD,IACX,KAAK,EACD,OAAO,cAACC,EAAD,IACX,KAAK,EACD,OAAO,cAACC,EAAD,IACX,KAAK,EACD,OAAO,cAACC,EAAD,CAAoBzI,sBAAuBA,MCiB/C0I,EAzBC,SAAC,GAA6B,IAA5B1I,EAA2B,EAA3BA,sBAEN8B,EAAgB0C,qBAAWhC,GAA3BV,YAIR,EAAoC2C,mBAAS,SAA7C,mBAAOkE,EAAP,KAAmBC,EAAnB,KAUA,OARA/B,qBAAU,WACc,IAAhB/E,EAAmB8G,EAAc,aACZ,IAAhB9G,EAAmB8G,EAAc,UACjB,IAAhB9G,EAAmB8G,EAAc,cACjB,IAAhB9G,GAAmB8G,EAAc,WAC3C,CAAC9G,IAIA,sBAAK3B,UAAU,cAAf,UACI,cAAC,EAAD,CAAQ2B,YAAaA,IACrB,cAAC,EAAD,CAAMA,YAAaA,EAAa9B,sBAAuBA,IACvD,qBAAKG,UAAWwI,QClCb,MAA0B,iCCyC1BE,EAlCE,WACb,OACI,gCACI,qBAAK1I,UAAU,eACf,qBAAKA,UAAU,iBAAf,SACI,eAACF,EAAA,EAAOC,IAAR,CACAN,QAAS,CAACkB,GAAI,KACdhB,QAAS,CAACgB,EAAE,GAFZ,UAII,cAACb,EAAA,EAAOO,IAAR,CACAZ,QAAS,CAACkJ,EAAG,GAAIhI,EAAG,GAAIjB,QAAS,GACjCC,QAAS,CAACgJ,EAAG,EAAGhI,EAAG,EAAGjB,QAAS,GAC/BS,WAAY,CAACO,SAAU,GAAKgB,KAAM,WAAYtB,MAAM,GACpDE,IAAKsI,EAAMpI,IAAI,QAAQR,UAAU,SAEjC,cAACF,EAAA,EAAO+I,GAAR,CACApJ,QAAS,CAACkB,GAAI,KACdhB,QAAS,CAACgB,EAAG,GACbR,WAAY,CAACO,SAAU,IAHvB,wDAQA,cAACZ,EAAA,EAAOO,IAAR,CACAZ,QAAS,CAACkJ,GAAI,GAAIhI,GAAG,GAAIjB,QAAS,GAClCC,QAAS,CAACgJ,EAAG,EAAGhI,EAAG,EAAGjB,QAAS,GAC/BS,WAAY,CAACO,SAAU,GAAMgB,KAAM,WAAYtB,MAAO,GACtDE,IAAKsI,EAAM5I,UAAU,aAAaQ,IAAI,cCV3CsI,EAhBY,WACvB,MAAoDxE,mBAAS,SAA7D,mBAAOyE,EAAP,KAA2BlJ,EAA3B,KAEA,OAAQkJ,GACJ,IAAK,QACD,OAAO,cAAC,EAAD,CAAOlJ,sBAAuBA,IACzC,IAAK,UACD,OAAO,cAAC,EAAD,CAASA,sBAAuBA,IAC3C,IAAK,WACD,OAAO,cAAC,EAAD,IACX,QACI,SCGGmJ,MAXf,WAEE,OACE,cAAC,EAAD,UACE,sBAAMhJ,UAAU,MAAhB,SACE,cAAC,EAAD,SCVRiJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c362bf47.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/main-vector.5dc81c84.png\";","export default __webpack_public_path__ + \"static/media/vector.e5f2a04a.svg\";","// Importing vector image\r\nimport main_vector from \"../imgs/main-vector.png\";\r\nimport vector from \"../imgs/vector.svg\";\r\n// Importing framer motion\r\nimport { motion } from \"framer-motion\";\r\n\r\n// Framermotion variants\r\nconst startContentVariant = {\r\n    initial: {\r\n        opacity: 0\r\n    },\r\n    animate: {\r\n        opacity: 1\r\n    }\r\n}\r\n\r\nconst Start = ({setComponentToDisplay}) => {\r\n    \r\n    //Function for changing displayForm from false to true\r\n    const switchToWrapper = () => {\r\n        setComponentToDisplay(\"Wrapper\");\r\n    }\r\n    return ( \r\n        <motion.div className=\"start-page\" \r\n        initial={{backgroundImage: `url(${main_vector})`}}\r\n        animate={{backgroundImage: \"none\"}}\r\n        transition={{delay: 0.6}}\r\n        >\r\n\r\n            <motion.div className=\"start-page-content\" \r\n                initial={startContentVariant.initial}\r\n                animate={startContentVariant.animate}\r\n                transition={{delay: 0.7}}\r\n            >\r\n                <div className=\"start-page-img\">\r\n                    <motion.img src={vector} alt=\"\" \r\n                    initial={{scale: 13}}\r\n                    animate={{scale: [12,10,7,5,2,1]}}\r\n                    transition={{delay: 0.6,duration: 0.5}}\r\n                    />\r\n                </div>\r\n                \r\n                <motion.div className=\"start-button\"\r\n                initial={{y:-100, opacity: 0}}\r\n                animate={{y:0, opacity: 1}}\r\n                transition={{duration: 1.3,delay: 0.8}}\r\n                >\r\n                    <a href=\"#\" onClick={switchToWrapper}>\r\n                        კითხვარის\r\n                        <br />\r\n                        დაწყება\r\n                        </a>\r\n                </motion.div>\r\n\r\n            </motion.div>\r\n\r\n        </motion.div>\r\n     );\r\n}\r\n \r\nexport default Start;","export const INCREASE_PAGE = \"INCREASE_PAGE\";\r\nexport const DECREASE_PAGE = \"DECREASE_PAGE\";\r\n\r\n// COVID INFO TYPES\r\nexport const SET_ANTIBODY_TEST = \"SET_ANTIBODY_TEST\";\r\nexport const SET_ANTIBODY_NUMBER = \"SET_ANTIBODY_NUMBER\";\r\nexport const SET_ANTIBODY_DATE = \"SET_ANTIBODY_DATE\";\r\nexport const SET_HADCOVID_DATE = \"SET_HASCOVID_DATE\";\r\n\r\n// VACCINATION INFO TYPES\r\nexport const SET_VACCINATIONDOSE = \"SET_VACCINATIONDOSE\";\r\nexport const SET_WAITING_FOR = \"SET_WAITING_FOR\";\r\n\r\n// SETTING VALUE TYPE\r\nexport const SET_VALUE = \"SET_VALUE\";","// Improrting types\r\nimport {\r\n    INCREASE_PAGE,\r\n    DECREASE_PAGE,\r\n\r\n    // Personal info\r\n    SET_FIRSTNAME,\r\n    SET_LASTNAME,\r\n    SET_EMAIL,\r\n\r\n    // Covid info\r\n    SET_HADCOVID,\r\n    SET_ANTIBODY_TEST,\r\n    SET_ANTIBODY_NUMBER,\r\n    SET_ANTIBODY_DATE,\r\n    SET_HADCOVID_DATE,\r\n\r\n    // Vaccination info\r\n    SET_VACCINATIONDOSE,\r\n    SET_WAITING_FOR,\r\n\r\n    // Setting value\r\n    SET_VALUE\r\n} from \"./types\";\r\n\r\nconst AppReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case INCREASE_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: state.currentPage + 1\r\n            }\r\n        case DECREASE_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: state.currentPage - 1\r\n            }\r\n        // Setting Covid 19 form state\r\n        case SET_ANTIBODY_TEST:\r\n            return {\r\n                ...state,\r\n                doneAntibodyTest: action.payload\r\n            }\r\n        case SET_ANTIBODY_NUMBER:\r\n            return {\r\n                ...state,\r\n                antibodyNumber: action.payload\r\n            }\r\n        case SET_ANTIBODY_DATE:\r\n            return {\r\n                ...state,\r\n                antibodyDate: action.payload\r\n            }\r\n        case SET_HADCOVID_DATE:\r\n            return {\r\n                ...state,\r\n                hadCovidDate: action.payload\r\n            }\r\n        // Setting Vaccination form state\r\n        case SET_VACCINATIONDOSE:\r\n            return {\r\n                ...state,\r\n                vaccinationDose: action.payload\r\n            }\r\n        case SET_WAITING_FOR:\r\n            return {\r\n                ...state,\r\n                waitingFor: action.payload\r\n            }\r\n\r\n        // Setting values if other state elements are not depended on it\r\n        case SET_VALUE:\r\n            return {\r\n                ...state,\r\n                [action.payload.name]: action.payload.value\r\n            }\r\n\r\n        // return state if default\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default AppReducer;","import { createContext , useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n// Importing types\r\nimport {\r\n    INCREASE_PAGE,\r\n    DECREASE_PAGE,\r\n\r\n    // Covid info\r\n    SET_ANTIBODY_TEST,\r\n    SET_ANTIBODY_NUMBER,\r\n    SET_ANTIBODY_DATE,\r\n    SET_HADCOVID_DATE,\r\n\r\n    // Vaccination info\r\n    SET_VACCINATIONDOSE,\r\n    SET_WAITING_FOR,\r\n\r\n    // Setting value\r\n    SET_VALUE\r\n} from \"./types\";\r\n\r\n// App context\r\nexport const AppContext = createContext();\r\n\r\n// InitialState\r\nexport const initialState = {\r\n    currentPage: 1,\r\n\r\n    // Personal info\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n\r\n    // Covid info\r\n    hadCovid: \"\",\r\n    doneAntibodyTest: \"\",\r\n    antibodyNumber: \"\",\r\n    antibodyDate: \"\",\r\n    hadCovidDate: \"\",\r\n\r\n    // Vaccination info\r\n    isVaccinated: \"\",\r\n    vaccinationDose: \"\",\r\n    waitingFor: \"\",\r\n\r\n    // Reccomendations info\r\n    onlineMeetings: \"\",\r\n    officeWorkDays: \"\",\r\n    physicalMeetings: \"\",\r\n    opinionAboutEnv: \"\"\r\n}\r\n\r\n// Context provider\r\nexport const AppState = (props) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    const nextPage = () => {\r\n        dispatch({\r\n            type: INCREASE_PAGE\r\n        })\r\n    }\r\n    const previousPage = () => {\r\n        dispatch({\r\n            type: DECREASE_PAGE\r\n        });\r\n    }\r\n\r\n    /* Functions for getting value from form */\r\n        // functions for setting covid info\r\n    const setDoneAntibodyTest = input => {\r\n        dispatch({\r\n            type: SET_ANTIBODY_TEST,\r\n            payload: input\r\n        });\r\n    }\r\n    const setAntibodyDate = input => {\r\n        dispatch({\r\n            type: SET_ANTIBODY_DATE,\r\n            payload: input\r\n        });\r\n    }\r\n    const setAntibodyNumber = input => {\r\n        dispatch({\r\n            type: SET_ANTIBODY_NUMBER,\r\n            payload: input\r\n        });\r\n    }\r\n    const setHadCovidDate = input => {\r\n        dispatch({\r\n            type: SET_HADCOVID_DATE,\r\n            payload: input\r\n        });\r\n    }\r\n        // functions for setting vaccination info\r\n    const setVaccinationDose = input => {\r\n        dispatch({\r\n            type: SET_VACCINATIONDOSE,\r\n            payload: input\r\n        });\r\n    }\r\n    const setWaitingFor = input => {\r\n        dispatch({\r\n            type: SET_WAITING_FOR,\r\n            payload: input\r\n        });\r\n    }\r\n    //      function for setting value\r\n    const setValue = (name, value) => {\r\n        dispatch({\r\n            type: SET_VALUE,\r\n            payload: { name , value }\r\n        })\r\n    }\r\n\r\n    return <AppContext.Provider value={{\r\n        currentPage: state.currentPage,\r\n        nextPage,\r\n        previousPage,\r\n\r\n        // Personal info state\r\n        firstName: state.firstName,\r\n        lastName: state.lastName,\r\n        email: state.email,\r\n        \r\n        // Covid info state\r\n        hadCovid: state.hadCovid,\r\n        doneAntibodyTest: state.doneAntibodyTest,\r\n        antibodyNumber: state.antibodyNumber,\r\n        antibodyDate: state.antibodyDate,\r\n        hadCovidDate: state.hadCovidDate,\r\n\r\n        setDoneAntibodyTest,\r\n        setAntibodyDate,\r\n        setAntibodyNumber,\r\n        setHadCovidDate,\r\n\r\n        // Vaccination info state\r\n        isVaccinated: state.isVaccinated,\r\n        vaccinationDose: state.vaccinationDose,\r\n        waitingFor: state.waitingFor,\r\n\r\n        setVaccinationDose,\r\n        setWaitingFor,\r\n\r\n        // Recommendation info state\r\n        onlineMeetingsDays: state.onlineMeetingsDays,\r\n        officeWorkDays: state.officeWorkDays,\r\n        physicalMeetings: state.physicalMeetings,\r\n        opinionAboutEnv: state.opinionAboutEnv,\r\n\r\n        // setValue\r\n        setValue\r\n    }}>\r\n        {props.children}\r\n    </AppContext.Provider>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.8c96a154.svg\";","// Importing react hooks\r\nimport { useContext } from \"react\";\r\n\r\n// Importing app context\r\nimport { AppContext } from \"../context/AppState\";\r\n\r\n// Importing images\r\nimport logo from \"../imgs/logo.svg\";\r\n\r\nconst Navbar = ({currentPage}) => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <h2 className=\"navbar-logo\">\r\n                <img src={logo} alt=\"logo\" />\r\n            </h2>\r\n            <h2 className=\"current-page\">{currentPage}/4</h2>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/people.cbf4d383.png\";","export default __webpack_public_path__ + \"static/media/next.af59a94f.svg\";","export default __webpack_public_path__ + \"static/media/next-uncompleted.d042aa23.svg\";","export default __webpack_public_path__ + \"static/media/next-uncompleted-clicked.d042aa23.svg\";","// Importing React Hooks\r\nimport { useState , useContext , useEffect } from \"react\";\r\n\r\n// Importing img sources\r\nimport user_info_img from \"../imgs/people.png\";\r\nimport next_svg from \"../imgs/next.svg\"\r\nimport next_uncompleted_svg from \"../imgs/next-uncompleted.svg\";\r\nimport next_uncompleted_clicked_svg from \"../imgs/next-uncompleted-clicked.svg\";\r\n\r\n// Importing app context\r\nimport { AppContext } from \"../context/AppState\";\r\n\r\nconst UserInfo = () => {\r\n    \r\n    // Using context\r\n    const { \r\n        firstName,\r\n        lastName,\r\n        email,\r\n        \r\n        setValue,\r\n        \r\n        nextPage\r\n        } = useContext(AppContext);\r\n\r\n    // Error state\r\n    const [firstNameErr, setFirstNameErr] = useState(\"\");\r\n    const [lastNameErr, setLastNameErr] = useState(\"\");\r\n    const [emailErr, setEmailErr] = useState(\"\");\r\n\r\n    // Input and error handler functions\r\n\r\n    //      getting and validating first name\r\n    const handleFirstNameChange = ev => {\r\n\r\n        const {name ,value} = ev.target;\r\n\r\n        setValue(name, value);\r\n\r\n        const regex = /^[a-zA-Zა-ჰ]{3,255}$/;\r\n\r\n        let error;\r\n        if (!value) {\r\n            error = \"სახელის ველი სავალდებულოა\";\r\n        } else if (value.length > 0 && value.length < 3 ) {\r\n            error = \"სახელის ველი უნდა შედგებოდეს მინიმუმ 3 სიმბოლოგან\";\r\n        } else if (value.length > 255) {\r\n            error = \"სახელის ველი უნდა შედგებოდეს მაქსიმუმ 255 სიმბოლოსგან\";\r\n        } else if (!regex.test(value)) {\r\n            error = \"სახელის ველი უნდა შეიცავდეს მხოლოდ ალფაბეტის სიმბოლოებს(ა-ჰ, a-z, A-Z)\";\r\n        } else {\r\n            error = null;\r\n        }\r\n\r\n        setFirstNameErr(error);\r\n    }\r\n    //      getting and validating last name\r\n    const handleLastNameChange = ev=> {\r\n        const { name , value } = ev.target;\r\n\r\n        setValue(name, value);\r\n\r\n        const regex = /^[a-zA-Zა-ჰ]{3,255}?$/;\r\n\r\n        let error;\r\n        if (!value) {\r\n            error = \"გვარის ველი სავალდებულოა\";\r\n        } else if (value.length > 0 && value.length < 3 ) {\r\n            error = \"გვარის ველი უნდა შედგებოდეს მინიმუმ 3 სიმბოლოგან\";\r\n        } else if (value.length > 255) {\r\n            error = \"გვარის ველი უნდა შედგებოდეს მაქსიმუმ 255 სიმბოლოსგან\";\r\n        } else if (!regex.test(value)) {\r\n            error = \"გვარის ველი უნდა შეიცავდეს მხოლოდ ალფაბეტის სიმბოლოებს(ა-ჰ, a-z, A-Z)\";\r\n        } else {\r\n            error = null;\r\n        }\r\n\r\n        setLastNameErr(error);\r\n    }\r\n\r\n    //      getting and validating email\r\n    const handleEmailChange = ev => {\r\n\r\n        const { name , value } = ev.target;\r\n\r\n        setValue(name, value);\r\n\r\n        const emailRegex = /^[\\w]{3,255}?[a-zA-Z0-9]{0,255}@[a-z]{2,50}\\.[a-z]{2,4}$/;\r\n        const redberryRegex = /^[\\w]{3,255}?[a-zA-Z0-9]{0,255}@redberry\\.ge$/;\r\n\r\n        let error;\r\n        \r\n        if (!value) {\r\n            error = \"მეილის ველი სავალდებულოა\";\r\n        } else if (!emailRegex.test(value)) {\r\n            error = \"თქვენს მიერ შეყვანილი მეილი არასწორია\";\r\n        } else if (emailRegex.test(value) && !redberryRegex.test(value)) {\r\n            error = \"გთხოვთ დარეგისტრირდეთ რედბერის მეილით(youremail@redberry.ge)\";\r\n        }\r\n\r\n        setEmailErr(error);\r\n    }\r\n\r\n    // Checking if user can go to next page or not\r\n    const isValid = !firstNameErr && !lastNameErr && !emailErr;\r\n    const isNotEmpty = firstName !== \"\" && lastName !== \"\" && email !== \"\";\r\n\r\n    // Displaying errors if fields are empty\r\n    const displayErrors = () => {\r\n        if (!isNotEmpty) {\r\n            if (!firstName) {\r\n                setFirstNameErr(\"სახელის ველი სავალდებულოა\");\r\n            }\r\n            if (!lastName) {\r\n                setLastNameErr(\"გვარის ველი სავალდებულოა\");\r\n            }\r\n            if (!email) {\r\n                setEmailErr(\"მეილის ველი სავალდებულოა\");\r\n            }\r\n        }\r\n    }\r\n    // Displaying next page if there are no problems\r\n    const goToNextPage = () => {\r\n        nextPage();\r\n    }\r\n\r\n    return ( \r\n        <div className=\"user-info\">\r\n            <div className=\"content-wrapper\">\r\n                <section className=\"form-wrapper\">\r\n                    <form id=\"user-form\">\r\n                        <div className=\"input-group\">\r\n                            <h3 htmlFor=\"name\" className=\"required\">სახელი</h3>\r\n                            <input \r\n                            type=\"text\"\r\n                            name=\"firstName\" \r\n                            id=\"first-name\" \r\n                            className=\"text-input\"\r\n                            onChange={handleFirstNameChange}\r\n                            value={firstName} \r\n                            autoComplete=\"off\" />\r\n                        </div>\r\n                        {firstNameErr && (\r\n                            <p className=\"text-danger\">{firstNameErr}</p>\r\n                        )}\r\n                        <div className=\"input-group\">\r\n                            <h3 htmlFor=\"last-name\" className=\"required\">გვარი</h3>\r\n                            <input \r\n                            type=\"text\"\r\n                            name=\"lastName\" \r\n                            id=\"last-name\" \r\n                            className=\"text-input\"\r\n                            onChange={handleLastNameChange}\r\n                            value={lastName} \r\n                            autoComplete=\"off\" />\r\n                        </div>\r\n                        {lastNameErr && (\r\n                            <p className=\"text-danger\">{lastNameErr}</p>\r\n                        )}\r\n                        <div className=\"input-group\">\r\n                            <h3 htmlFor=\"email\" className=\"required\">მეილი</h3>\r\n                            <input \r\n                            type=\"text\" \r\n                            name=\"email\"\r\n                            id=\"email\" \r\n                            className=\"text-input\"\r\n                            onChange={handleEmailChange}\r\n                            value={email} \r\n                            autoComplete=\"off\" />\r\n                        </div>\r\n                        {emailErr && (\r\n                            <p className=\"text-danger\">{emailErr}</p>\r\n                        )}\r\n                    </form>\r\n                    <span className=\"required-fields-info\">\r\n                    <hr />\r\n                        *-ით მონიშნული ველების შევსება სავალდებულოა\r\n                    </span>\r\n                </section>\r\n                <aside className=\"img-wrapper\">\r\n                    <img src={user_info_img} alt=\"user-info-img\" />\r\n                </aside>\r\n            </div>\r\n            <div className=\"arrows\">\r\n            {isValid && isNotEmpty ? \r\n                (<button onClick={goToNextPage}>\r\n                    <img src={next_svg} alt=\"next\" />\r\n                </button>) : \r\n                (<button onClick={displayErrors}>\r\n                    <img src={next_uncompleted_svg} alt=\"next-uncompleted\" />\r\n                </button>)\r\n            }\r\n            \r\n                \r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default UserInfo;","export default __webpack_public_path__ + \"static/media/vaccinate2.7d58a8a5.png\";","export default __webpack_public_path__ + \"static/media/previous.34f45c01.svg\";","// Importing hooks\r\nimport { useContext , useState , useEffect } from \"react\";\r\n\r\n// Importing images\r\nimport covid19 from \"../imgs/vaccinate2.png\";\r\nimport next_svg from \"../imgs/next.svg\"\r\nimport next_uncompleted from \"../imgs/next-uncompleted-clicked.svg\";\r\nimport previous_svg from \"../imgs/previous.svg\"\r\n\r\n// Importing context\r\nimport { AppContext } from \"../context/AppState\";\r\n\r\nconst CovidInfo = () => {\r\n    // Using context\r\n    const {\r\n        nextPage,\r\n        previousPage,\r\n\r\n        hadCovid,\r\n        doneAntibodyTest,\r\n        antibodyNumber,\r\n        antibodyDate,\r\n        hadCovidDate,\r\n\r\n        setDoneAntibodyTest,\r\n        setAntibodyDate,\r\n        setAntibodyNumber,\r\n        setHadCovidDate,\r\n        \r\n        setValue\r\n    } = useContext(AppContext);\r\n    \r\n    // Input handlers\r\n    \r\n    //      checking if user had covid or not\r\n    const handleHadCovid = ev => {\r\n        const { name, value } = ev.target;\r\n\r\n        if (value === \"არა\" || value === \"ახლა მაქვს\") {\r\n            setDoneAntibodyTest(\"\");\r\n            setAntibodyDate(\"\");\r\n            setAntibodyNumber(\"\");\r\n        }\r\n        setValue(name, value);\r\n    };    \r\n    //      checking if user has done antibody test or not\r\n    const handleDoneAntibodyTest = doneABTest => {\r\n        setDoneAntibodyTest(doneABTest);\r\n        \r\n        if (doneABTest === \"კი\") {\r\n            setHadCovidDate(\"\");\r\n        }\r\n        else if (doneABTest === \"არა\") {\r\n            setAntibodyDate(\"\");\r\n            setAntibodyNumber(\"\");\r\n        }\r\n    };\r\n    //      checking antibody number of user\r\n    const handleAntibodyNumber = abNumber => {\r\n        \r\n        let error;\r\n        setAntibodyNumber(abNumber);    \r\n        \r\n        if (!abNumber) {\r\n            error = \"ანტისხეულების რაოდენობის შეყვანა სავალდებულოა\";\r\n        } \r\n        else if (!/[?0-9]+$/.test(abNumber)) {\r\n            error = \"მნიშვნელობა აუცილებლად უნდა იყოს Number: შეიყვანეთ რიცხვითი მნიშნელობა\";\r\n        }\r\n        \r\n        setAntibodyNumberErr(error);\r\n    };\r\n    //      checking when did user took antibody test\r\n    const handleAntibodyDate = ev => setAntibodyDate(ev.target.value);    \r\n    //      checking when user had covid\r\n    const handleHadCovidDate = ev => setHadCovidDate(ev.target.value);\r\n    \r\n    // Error state\r\n    const [antibodyNumberErr, setAntibodyNumberErr] = useState(\"\");\r\n    \r\n    // Checking if form is filled\r\n    const noOrCurrentlyHave = hadCovid === \"არა\" || hadCovid === \"ახლა მაქვს\";\r\n\r\n    const isFilled1 = () => {\r\n\r\n        if (hadCovid === \"\") return false;\r\n        \r\n        else if (hadCovid === \"კი\") {\r\n            if (doneAntibodyTest === \"\") return false;\r\n\r\n            else if (doneAntibodyTest === \"კი\") {\r\n                if (antibodyDate === \"\" || antibodyNumber === \"\" || !/[?0-9]+$/.test(antibodyNumber)) return false;\r\n                else return true;\r\n            }\r\n        }\r\n    }\r\n    const isFilled2 = () => {\r\n        if (hadCovid === \"\") return false;\r\n        else if (hadCovid === \"კი\") {\r\n            if (doneAntibodyTest === \"\") return false;\r\n\r\n            else if (doneAntibodyTest === \"არა\") {\r\n                if (!hadCovidDate) return false;\r\n                else return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    const [uncompletedError, setUncompletedError] = useState(false);\r\n\r\n    const showFillFieldErr = () => {\r\n        setUncompletedError(true);\r\n        setTimeout(()=> {\r\n            setUncompletedError(false);\r\n        }, 2000);\r\n    };\r\n\r\n    const canSubmit = isFilled1() || isFilled2() || noOrCurrentlyHave;\r\n\r\n    // Variable for checking if user can submit or not\r\n    const [showSubmit, setShowSubmit] = useState(false);\r\n    \r\n    // Showing button depending on if form is filled or not\r\n    useEffect(()=> {\r\n\r\n        if (canSubmit) {\r\n            setShowSubmit(true);\r\n        } else {\r\n            setShowSubmit(false);\r\n        }\r\n    },[\r\n        hadCovid,\r\n        doneAntibodyTest,\r\n        antibodyNumber,\r\n        antibodyDate,\r\n        hadCovidDate,\r\n        canSubmit \r\n    ]);\r\n\r\n    return ( \r\n        <div className=\"covid-info\">\r\n            <div className=\"content-wrapper\">\r\n                <section className=\"form-wrapper\">\r\n                    <form id=\"covid-form\">\r\n                        <div className=\"input-group\">\r\n                            <h3 className=\"info-title required\">გაქვს გადატანილი Covid-19?</h3>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"have-covid\">\r\n                                <input\r\n                                 type=\"radio\"\r\n                                 name=\"hadCovid\"\r\n                                 id=\"have-covid\"\r\n                                 onChange={handleHadCovid}\r\n                                 value=\"კი\"\r\n                                 checked={hadCovid === \"კი\"}\r\n                                 />\r\n                                 <div className=\"radio-dot\"></div>\r\n                                კი\r\n                            </label>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"doesnt-have-covid\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 name=\"hadCovid\" \r\n                                 id=\"doesnt-have-covid\" \r\n                                 onChange={handleHadCovid}\r\n                                 value=\"არა\"\r\n                                 checked={hadCovid === \"არა\"}\r\n                                 />\r\n                                 <div className=\"radio-dot\"></div>\r\n                                არა\r\n                            </label>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"currently-have-covid\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 name=\"hadCovid\" \r\n                                 id=\"currently-have-covid\"\r\n                                 value=\"ახლა მაქვს\" \r\n                                 onChange={handleHadCovid}\r\n                                 checked={hadCovid === \"ახლა მაქვს\"}\r\n                                 />\r\n                                 <div className=\"radio-dot\"></div>\r\n                                ახლა მაქვს\r\n                            </label>\r\n                        </div>\r\n\r\n                    {hadCovid === \"კი\" && (\r\n                        <div className=\"input-group\">\r\n                            <h3 className=\"info-title required\">შემთხვევით ანტისხეულების ტესტი ხომ არ გაქვს გაკეთებული?</h3>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"antibody-test-true\">\r\n                                <input\r\n                                 type=\"radio\"\r\n                                 name=\"antibody-test-info\"\r\n                                 id=\"antibody-test-true\"\r\n                                 value=\"კი\"\r\n                                 onChange={ev => handleDoneAntibodyTest(ev.target.value)}\r\n                                 checked={doneAntibodyTest === \"კი\"}\r\n                                 />\r\n                                 <div className=\"radio-dot\"></div>\r\n                                კი\r\n                            </label>\r\n                            <label className=\"input-group-item radio radio\" htmlFor=\"antibody-test-false\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 name=\"antibody-test-info\" \r\n                                 id=\"antibody-test-false\" \r\n                                 value=\"არა\"\r\n                                 onChange={ev => handleDoneAntibodyTest(ev.target.value)}\r\n                                 checked={doneAntibodyTest === \"არა\"}\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                            არა\r\n                            </label>\r\n                        </div>\r\n                    )}\r\n\r\n                    {doneAntibodyTest === \"კი\" && (\r\n                        <div className=\"input-group\">\r\n                            <h3>თუ გახსოვს, გთხოვ მიუთითე მიახლოებითი თარიღი და რაოდენობა ანტისხეულების</h3>\r\n                            <div className=\"input-group-item\">\r\n                                <input\r\n                                 className=\"text-input\"\r\n                                 type=\"date\" \r\n                                 name=\"antibody-test-date\" \r\n                                 id=\"antibody-test-date\" \r\n                                 onChange={handleAntibodyDate}\r\n                                 value={antibodyDate}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group-item\">\r\n                                <input \r\n                                 className=\"text-input\"\r\n                                 type=\"number\"\r\n                                 name=\"antibody-test-number\"\r\n                                 id=\"antibody-test-number\" \r\n                                 placeholder=\"ანტისხეულების რაოდენობა\"\r\n                                 value={antibodyNumber}\r\n                                 onChange={ev => handleAntibodyNumber(ev.target.value)}\r\n                                />\r\n                            </div>\r\n                            {antibodyNumberErr && (\r\n                                <p className=\"text-danger\">{antibodyNumberErr}</p>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    \r\n                    {doneAntibodyTest === \"არა\" && (\r\n                        <div className=\"input-group\">\r\n                            <h3>მიუთითე მიახლოებითი პერიოდი (დღე/თვე/წელი), როდის გქონდა კოვიდ19</h3>\r\n                            <div className=\"input-group-item\">\r\n                                <input\r\n                                 className=\"text-input\"\r\n                                 type=\"date\"\r\n                                 name=\"had-covid-date\" \r\n                                 id=\"had-covid-date\"\r\n                                 placeholder=\"დდ/თთ/წწ\"\r\n                                 onChange={handleHadCovidDate}\r\n                                 value={hadCovidDate}\r\n                                 />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    </form>\r\n                </section>\r\n                <aside className=\"img-wrapper\">\r\n                    <img src={covid19} alt=\"covid-19\" />\r\n                </aside>\r\n            </div>\r\n            <div className=\"arrows\">\r\n                <button onClick={previousPage}>\r\n                    <img src={previous_svg} alt=\"previous\" />\r\n                </button>\r\n                \r\n                {showSubmit ? \r\n                (\r\n                    <button onClick={nextPage}>\r\n                            <img src={next_svg} alt=\"next\" />\r\n                    </button>\r\n                ) :\r\n                <button onClick={showFillFieldErr}>\r\n                        {uncompletedError && (\r\n                            <p className=\"fill-fields-err\">ჯერ შეავსე &lt;3</p>\r\n                        )}\r\n                        <img src={next_uncompleted} alt=\"uncompleted\" />\r\n                    </button>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CovidInfo;","export default __webpack_public_path__ + \"static/media/doctor2.3e94e51e.png\";","// Importing hooks\r\nimport { useContext, useEffect , useState } from \"react\";\r\n\r\n// Importing images\r\nimport doctor from \"../imgs/doctor2.png\";\r\nimport next_svg from \"../imgs/next.svg\";\r\nimport next_uncompleted from \"../imgs/next-uncompleted.svg\";\r\nimport previous_svg from \"../imgs/previous.svg\"\r\n\r\n// Importing context\r\nimport { AppContext } from \"../context/AppState\";\r\n\r\nconst VaccinationInfo = () => {\r\n    // Using context\r\n    const {\r\n        nextPage,\r\n        previousPage,\r\n\r\n        isVaccinated,\r\n        vaccinationDose,\r\n        waitingFor,\r\n\r\n        setVaccinationDose,\r\n        setWaitingFor,\r\n\r\n        setValue\r\n    } = useContext(AppContext);\r\n\r\n    // Functions for handling input change\r\n    const handleIsVaccinated = ev => {\r\n        const { name, value } = ev.target;\r\n\r\n        if (value === \"კი\") {\r\n            setWaitingFor(\"\");\r\n        }\r\n        if (value === \"არა\") {\r\n            setVaccinationDose(\"\");\r\n        }\r\n\r\n        setValue(name, value);\r\n    }\r\n    const handleVaccinationDose = ev => setValue(ev.target.name, ev.target.value);\r\n    const handleWaitingFor = ev => setValue(ev.target.name, ev.target.value);\r\n    \r\n    // Checking if inputs are filled or not\r\n\r\n    const isFilled = () => {\r\n        if (isVaccinated === \"\") return false;\r\n        else if (isVaccinated === \"კი\") {\r\n            if (vaccinationDose === \"\") return false;\r\n            else return true;\r\n        }\r\n        else if (isVaccinated === \"არა\") {\r\n            if (waitingFor === \"\") return false;\r\n            else return true;\r\n        }\r\n    }\r\n    const [canSubmit, setCanSubmit] = useState(false);\r\n\r\n    const [uncompletedError, setUncompletedError] = useState(false);\r\n\r\n    const showFillFieldErr = () => {\r\n        setUncompletedError(true);\r\n        setTimeout(()=> {\r\n            setUncompletedError(false);\r\n        }, 1500);\r\n    };\r\n\r\n    useEffect(()=> {\r\n        if (isFilled()) setCanSubmit(true);\r\n        else setCanSubmit(false);\r\n    },[\r\n        isVaccinated,\r\n        vaccinationDose,\r\n        waitingFor\r\n    ])\r\n\r\n    return ( \r\n        <div className=\"vaccination-info\">\r\n            <div className=\"content-wrapper\">\r\n                <section className=\"form-wrapper\">\r\n                    <form id=\"vaccination-form\">\r\n                        <div className=\"input-group\">\r\n                            <h3 className=\"required\">უკვე აცრილი ხარ?</h3>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"is-vaccinated\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 name=\"isVaccinated\" \r\n                                 id=\"is-vaccinated\"\r\n                                 value=\"კი\"\r\n                                 onChange={handleIsVaccinated}\r\n                                 checked={isVaccinated === \"კი\"}\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                კი\r\n                            </label>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"is-not-vaccinated\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 name=\"isVaccinated\" \r\n                                 id=\"is-not-vaccinated\"\r\n                                 value=\"არა\"\r\n                                 onChange={handleIsVaccinated} \r\n                                 checked={isVaccinated === \"არა\"}\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                არა\r\n                            </label>\r\n                        </div>\r\n                        {isVaccinated === \"კი\" && (\r\n                            <div className=\"input-group\">\r\n                                <h3>აირჩიე რომელ ეტაპზე ხარ:</h3>\r\n                                <label className=\"input-group-item radio\"  htmlFor=\"f-true-s-upcoming\">\r\n                                    <input\r\n                                     type=\"radio\" \r\n                                     name=\"vaccinationDose\" \r\n                                     id=\"f-true-s-upcoming\"\r\n                                     value=\"პირველი დოზა და დარეგისტრირებული ვარ მეორეზე\"\r\n                                     onChange={handleVaccinationDose} \r\n                                     checked={vaccinationDose === \"პირველი დოზა და დარეგისტრირებული ვარ მეორეზე\"}\r\n                                    />\r\n                                    <div className=\"radio-dot\"></div>\r\n                                    პირველი დოზა და დარეგისტრირებული ვარ მეორეზე\r\n                                </label>\r\n                                <label className=\"input-group-item radio\" htmlFor=\"fully-vaccinated\">\r\n                                    <input\r\n                                     type=\"radio\" \r\n                                     name=\"vaccinationDose\" \r\n                                     id=\"fully-vaccinated\"\r\n                                     value=\"სრულად ვაქცინირებული ვარ\"\r\n                                     onChange={handleVaccinationDose} \r\n                                     checked={vaccinationDose === \"სრულად ვაქცინირებული ვარ\"}\r\n                                    />\r\n                                    <div className=\"radio-dot\"></div>\r\n                                    სრულად ვაქცინირებული ვარ\r\n                                </label>\r\n                                <label className=\"input-group-item radio\" htmlFor=\"f-true-s-false\">\r\n                                    <input\r\n                                     type=\"radio\" \r\n                                     name=\"vaccinationDose\" \r\n                                     id=\"f-true-s-false\"\r\n                                     value=\"პირველი დოზა და არ დავრეგისტრირებულვარ მეორეზე\"\r\n                                     onChange={handleVaccinationDose} \r\n                                     checked={vaccinationDose === \"პირველი დოზა და არ დავრეგისტრირებულვარ მეორეზე\"}\r\n                                    />\r\n                                    <div className=\"radio-dot\"></div>\r\n                                    პირველი დოზა და არ დავრეგისტრირებულვარ მეორეზე\r\n                                </label>\r\n                                {vaccinationDose === \"პირველი დოზა და არ დავრეგისტრირებულვარ მეორეზე\" && (\r\n                                    <p className=\"info-text\">\r\n                                        👉 რომ აღარ გადადო, <br />\r\n                                        ბარემ ეხლავე დარეგისტრირდი <a href=\"https://booking.moh.gov.ge/\">https://booking.moh.gov.ge/</a>\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        {isVaccinated === \"არა\" && (\r\n                            <div className=\"input-group\">\r\n                                <h3>რას ელოდები?</h3>\r\n                                <label className=\"input-group-item radio\" htmlFor=\"registered-waiting\">\r\n                                    <input\r\n                                     type=\"radio\"\r\n                                     value=\"დარეგისტრირებული ვარ და ველოდები თარიღს\"\r\n                                     id=\"registered-waiting\" \r\n                                     name=\"waitingFor\"\r\n                                     checked={waitingFor === \"დარეგისტრირებული ვარ და ველოდები თარიღს\"}\r\n                                     onChange={handleWaitingFor}\r\n                                    />\r\n                                    <div className=\"radio-dot\"></div>\r\n                                    დარეგისტრირებული ვარ და ველოდები თარიღს\r\n                                </label>\r\n                                <label className=\"input-group-item radio\" htmlFor=\"not-planning\">\r\n                                    <input\r\n                                     type=\"radio\"\r\n                                     value=\"არ ვგეგმავ\"\r\n                                     id=\"not-planning\" \r\n                                     name=\"waitingFor\"\r\n                                     checked={waitingFor === \"არ ვგეგმავ\"}\r\n                                     onChange={handleWaitingFor}\r\n                                    />\r\n                                    <div className=\"radio-dot\"></div>\r\n                                    არ ვგეგმავ\r\n                                </label>\r\n                                <label className=\"input-group-item radio\" htmlFor=\"planning-vaccination\">\r\n                                    <input\r\n                                     type=\"radio\"\r\n                                     value=\"გადატანილი მაქვს და ვგეგმავ აცრას\"\r\n                                     id=\"planning-vaccination\" \r\n                                     name=\"waitingFor\"\r\n                                     checked={waitingFor === \"გადატანილი მაქვს და ვგეგმავ აცრას\"}\r\n                                     onChange={handleWaitingFor}\r\n                                    />\r\n                                    <dot className=\"radio-dot\"></dot>\r\n                                    გადატანილი მაქვს და ვგეგმავ აცრას\r\n                                </label>\r\n                                {waitingFor === \"არ ვგეგმავ\" && (\r\n                                    <p className=\"info-text\">\r\n                                        👉 <a href=\"https://booking.moh.gov.ge/\">https://booking.moh.gov.ge/</a>\r\n                                    </p>\r\n                                )}\r\n                                {waitingFor === \"გადატანილი მაქვს და ვგეგმავ აცრას\" && (\r\n                                    <p className=\"info-text\">\r\n                                        ახალი პროტოკოლით კოვიდის გადატანიდან 1 თვის შემდეგ შეგიძლიათ ვაქცინის გაკეთება. <br />\r\n                                        👉 რეგისტრაციის ლინკი <a href=\"https://booking.moh.gov.ge/\">https://booking.moh.gov.ge/</a>\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </form>\r\n                </section>\r\n                <aside className=\"img-wrapper\">\r\n                    <img src={doctor} alt=\"doctor\" />\r\n                </aside>\r\n            </div>\r\n            <div className=\"arrows\">\r\n                <button onClick={previousPage}>\r\n                    <img src={previous_svg} alt=\"previous\" />\r\n                </button>\r\n                {canSubmit ? \r\n                (\r\n                    <button onClick={nextPage}>\r\n                        <img src={next_svg} alt=\"next\" />\r\n                    </button>\r\n                ) :\r\n                (\r\n                    <button onClick={showFillFieldErr}>\r\n                        {uncompletedError && (\r\n                            <p className=\"fill-fields-err\">ჯერ შეავსე &lt;3</p>\r\n                        )}\r\n                        <img src={next_uncompleted} alt=\"uncompleted\" />\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default VaccinationInfo;","export default __webpack_public_path__ + \"static/media/bike.285d642f.png\";","// Importing hooks\r\nimport { useContext , useState, useEffect } from \"react\";\r\n\r\n// Importing images\r\nimport bike from \"../imgs/bike.png\";\r\nimport next_svg from \"../imgs/next.svg\"\r\nimport previous_svg from \"../imgs/previous.svg\"\r\n\r\n// Importing context\r\nimport { AppContext } from \"../context/AppState\";\r\n\r\nconst WorkInfo = ({setComponentToDisplay}) => {\r\n    // Using context\r\n    const {\r\n        previousPage,\r\n\r\n        onlineMeetingsDays,\r\n        officeWorkDays,\r\n        physicalMeetings,\r\n        opinionAboutEnv,\r\n\r\n        setValue\r\n    } = useContext(AppContext);\r\n\r\n    // Functions for handling input change\r\n    const handleChange = ev => setValue(ev.target.name ,ev.target.value);\r\n\r\n    // Showing thank you page if everything is ok\r\n    const [showThankYouPage, setShowThankYouPage] = useState(false);\r\n    \r\n    useEffect(()=> {\r\n        if (!onlineMeetingsDays || !officeWorkDays) \r\n            setShowThankYouPage(false);\r\n        else setShowThankYouPage(true);\r\n    },[\r\n        onlineMeetingsDays,\r\n        officeWorkDays\r\n    ]);\r\n\r\n    const submitForm = (ev) => {\r\n        ev.preventDefault();\r\n        if (showThankYouPage) setComponentToDisplay(\"ThankYou\");\r\n    }\r\n    return ( \r\n        <div className=\"recommendation-page\">\r\n            <div className=\"content-wrapper\">\r\n                <section className=\"form-wrapper recommendation-page-wrapper\">\r\n                    <p style={{marginTop:\"41px\"}}>რედბერის მთავარი ღირებულება ჩვენი გუნდის თითოეული წევრია. გარემო, რომელსაც ჩვენი\r\n                    თანამშრომლები ქმნით, ბევრისთვის არის და ყოფილა წლების განმავლობაში მიზნებისთვის ერთად ბრძოლის\r\n                    მიზეზი, ბევრისთვის კი — ჩვენთან გადმოსვლის.\r\n                    <br />\r\n                    <br />\r\n                    პანდემიის პერიოდში ერთმანეთსაც იშვიათად ვნახულობთ პირისპირ და ყოველდღიური კომუნიკაციაც გაიშვიათდა.</p>\r\n                    <form id=\"recommendation-form\" onSubmit={submitForm}>\r\n                        <div className=\"input-group\">\r\n                                <h3 className=\"required\">რა სიხშირით შეიძლება გვქონდეს საერთო არაფორმალური ონლაინ შეხვედრები, სადაც ყველა სურვილისამებრ ჩაერთვება?</h3>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"twice\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 name=\"onlineMeetingsDays\" \r\n                                 id=\"twice\" \r\n                                 value=\"კვირაში ორჯერ\"\r\n                                 className=\"info-label\"\r\n                                 onChange={handleChange} \r\n                                 checked={onlineMeetingsDays === \"კვირაში ორჯერ\"}\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                კვირაში ორჯერ\r\n                            </label>\r\n\r\n                            <label className=\"input-group-item radio\" htmlFor=\"once\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 name=\"onlineMeetingsDays\" \r\n                                 id=\"once\" \r\n                                 value=\"კვირაში ერთხელ\"\r\n                                 className=\"info-label\" \r\n                                 onChange={handleChange} \r\n                                 checked={onlineMeetingsDays === \"კვირაში ერთხელ\"}\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                კვირაში ერთხელ\r\n                            </label>\r\n\r\n                            <label className=\"input-group-item radio\"htmlFor=\"once-in-two-weeks\">\r\n                                <input \r\n                                 type=\"radio\" \r\n                                 name=\"onlineMeetingsDays\" \r\n                                 id=\"once-in-two-weeks\" \r\n                                 value=\"ორ კვირაში ერთხელ\"\r\n                                 className=\"info-label\"\r\n                                 onChange={handleChange}\r\n                                 checked={onlineMeetingsDays === \"ორ კვირაში ერთხელ\"}\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                ორ კვირაში ერთხელ\r\n                            </label>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"once-in-month\">\r\n                                <input \r\n                                 type=\"radio\"\r\n                                 name=\"onlineMeetingsDays\"\r\n                                 id=\"once-in-month\"\r\n                                 value=\"თვეში ერთხელ\"\r\n                                 className=\"info-label\"\r\n                                 onChange={handleChange} \r\n                                 checked={onlineMeetingsDays === \"თვეში ერთხელ\"}\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                თვეში ერთხელ\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <h3 className=\"required\">კვირაში რამდენი დღე ისურვებდი ოფისიდან მუშაობას?</h3>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"zero\">\r\n                                <input \r\n                                 type=\"radio\" \r\n                                 id=\"zero\"\r\n                                 value=\"0\"\r\n                                 onChange={handleChange}\r\n                                 checked={officeWorkDays === \"0\"}\r\n                                 name=\"officeWorkDays\"\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                0\r\n                            </label>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"one\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 id=\"one\"\r\n                                 value=\"1\"\r\n                                 onChange={handleChange} \r\n                                 checked={officeWorkDays === \"1\"}\r\n                                 name=\"officeWorkDays\"\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                1\r\n                            </label>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"two\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 id=\"two\" \r\n                                 value=\"2\"\r\n                                 onChange={handleChange}\r\n                                 checked={officeWorkDays === \"2\"}\r\n                                 name=\"officeWorkDays\"\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                2\r\n                            </label>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"three\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 id=\"three\" \r\n                                 value=\"3\"\r\n                                 onChange={handleChange}\r\n                                 checked={officeWorkDays === \"3\"}\r\n                                 name=\"officeWorkDays\"\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                3\r\n                            </label>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"four\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 id=\"four\" \r\n                                 value=\"4\"\r\n                                 onChange={handleChange}\r\n                                 checked={officeWorkDays === \"4\"}\r\n                                 name=\"officeWorkDays\"\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                4\r\n                            </label>\r\n                            <label className=\"input-group-item radio\" htmlFor=\"five\">\r\n                                <input\r\n                                 type=\"radio\" \r\n                                 id=\"five\" \r\n                                 value=\"5\"\r\n                                 onChange={handleChange}\r\n                                 checked={officeWorkDays === \"5\"}\r\n                                 name=\"officeWorkDays\"\r\n                                />\r\n                                <div className=\"radio-dot\"></div>\r\n                                5\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <h3>რას ფიქრობ ფიზიკურ შეკრებებზე?</h3>\r\n                            <textarea \r\n                            id=\"phyisical-meetings\"\r\n                            name=\"physicalMeetings\"\r\n                            className=\"textarea\"\r\n                            onChange={handleChange}\r\n                            value={physicalMeetings}></textarea>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <h3>რას ფიქრობ არსებულ გარემოზე:<br /> რა მოგწონს, რას დაამატებდი, რას შეცვლიდი?</h3>\r\n                            <textarea \r\n                            id=\"current-envorinment\"\r\n                            name=\"opinionAboutEnv\" \r\n                            className=\"textarea\"\r\n                            onChange={handleChange}\r\n                            value={opinionAboutEnv}></textarea>\r\n                        </div>\r\n                        <div className=\"end-button-wrapper\">\r\n                            <button type=\"submit\" className=\"submit-button\">დასრულება</button>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n                <aside className=\"img-wrapper work-page-img-wrapper\">\r\n                    <img src={bike} alt=\"\" />\r\n                </aside>\r\n            </div>\r\n            <div className=\"arrows\">\r\n                <button onClick={previousPage}>\r\n                    <img src={previous_svg} alt=\"previous\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default WorkInfo;","// Importing react hooks\r\nimport { useContext } from \"react\";\r\n\r\n// Importing components\r\nimport UserPage from \"../pages/UserPage\";\r\nimport CovidPage from \"../pages/CovidPage\";\r\nimport VaccinationPage from \"../pages/VaccinationPage\";\r\nimport RecommendationPage from \"../pages/RecommendationPage\";\r\n\r\n// Importing app context\r\nimport { AppContext } from \"../context/AppState\";\r\n\r\nconst Form = ({setComponentToDisplay}) => {\r\n    const { currentPage } = useContext(AppContext);\r\n    switch (currentPage) {\r\n        case 1:\r\n            return <UserPage />;\r\n        case 2: \r\n            return <CovidPage />\r\n        case 3:\r\n            return <VaccinationPage />\r\n        case 4:\r\n            return <RecommendationPage setComponentToDisplay={setComponentToDisplay} />\r\n        default:\r\n    }\r\n}\r\n \r\nexport default Form;","// importing hooks\r\nimport { useState , useContext , useEffect } from \"react\";\r\n\r\n// Importing components\r\nimport Navbar from \"./Navbar\";\r\nimport Form from \"./Form\";\r\n\r\n// Importing vectors\r\nimport next_vector from \"../imgs/next.svg\";\r\nimport previous_vector from \"../imgs/previous.svg\";\r\n\r\n// Importing context\r\nimport { AppContext } from \"../context/AppState\";\r\n\r\nconst Wrapper = ({setComponentToDisplay}) => {\r\n    // Using context\r\n    const { currentPage } = useContext(AppContext);\r\n    \r\n    // Changing Shape depending on current page\r\n\r\n    const [shapeClass, setShapeClass] = useState(\"shape\");\r\n\r\n    useEffect(() => {\r\n        if (currentPage === 1) setShapeClass(\"rectangle\");\r\n        else if (currentPage === 2) setShapeClass(\"circle\");\r\n        else if (currentPage === 3) setShapeClass(\"star-shape\");\r\n        else if (currentPage === 4) setShapeClass(\"heart\");\r\n    }, [currentPage])\r\n\r\n\r\n    return ( \r\n        <div className=\"app-wrapper\">\r\n            <Navbar currentPage={currentPage} />\r\n            <Form currentPage={currentPage} setComponentToDisplay={setComponentToDisplay} />\r\n            <div className={shapeClass}></div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Wrapper;","export default __webpack_public_path__ + \"static/media/star.ce4abbb2.svg\";","// Importing images\r\nimport star from \"../imgs/star.svg\";\r\n\r\n// Importing framer motion\r\nimport { motion } from \"framer-motion\";\r\n\r\n\r\nconst ThankYou = () => {\r\n    return ( \r\n        <div>\r\n            <div className=\"hidden-div\"></div>\r\n            <div className=\"thank-you-page\">\r\n                <motion.div \r\n                initial={{y: -100}}\r\n                animate={{y:0}}\r\n                >\r\n                    <motion.img \r\n                    initial={{x: 30, y: 30, opacity: 0}}\r\n                    animate={{x: 0, y: 0, opacity: 1}}\r\n                    transition={{duration: 0.5 ,type: \"ease-out\", delay:1}}\r\n                    src={star} alt=\"start\" className=\"star\" />\r\n\r\n                    <motion.h1 \r\n                    initial={{y: -100}}\r\n                    animate={{y: 0}}\r\n                    transition={{duration: 0.5}}\r\n                    >\r\n                        მადლობა\r\n                    </motion.h1>\r\n                    \r\n                    <motion.img  \r\n                    initial={{x: -30, y:-30, opacity: 0}}\r\n                    animate={{x: 0, y: 0, opacity: 1}}\r\n                    transition={{duration: 0.5 , type: \"ease-out\", delay: 1}}\r\n                    src={star} className=\"small-star\" alt=\"\" />\r\n                </motion.div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ThankYou;","// Importing hooks\r\nimport { useState } from \"react\";\r\n\r\n// Importing components\r\nimport Start from \"./Start\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport ThankYou from \"./ThankYou\";\r\n\r\nconst ComponentToDisplay = () => {\r\n    const [componentDoDisplay, setComponentToDisplay] = useState(\"Start\");\r\n\r\n    switch (componentDoDisplay) {\r\n        case \"Start\":\r\n            return <Start setComponentToDisplay={setComponentToDisplay} />\r\n        case \"Wrapper\":\r\n            return <Wrapper setComponentToDisplay={setComponentToDisplay} />\r\n        case \"ThankYou\":\r\n            return <ThankYou />\r\n        default:\r\n            return\r\n    }\r\n}\r\n \r\n\r\nexport default ComponentToDisplay;","// Importing CSS\r\nimport './App.css';\r\n\r\n// Importing Hooks\r\nimport { useState } from \"react\";\r\n\r\n// Importing components\r\nimport ComponentToDisplay from './components/ComponentToDisplay';\r\n\r\n// importing context provider\r\nimport { AppState } from \"./context/AppState\";\r\nfunction App() {\r\n\r\n  return (\r\n    <AppState>\r\n      <main className=\"app\">\r\n        <ComponentToDisplay />\r\n      </main>\r\n    </AppState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport \"./App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}